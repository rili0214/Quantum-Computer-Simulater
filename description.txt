This is a classical simulator for a quantum computer. it works as a “programming interface” for quantum programming and 
a classical simulation of the quantum circuit that the user “programs”. Here are the capabilities it has:
    (1) Programmer can specify n the number of input qubits, for example n = 4.
    (2) Programmer can specify any number of levels of quantum computation. Let ℓ be the number of levels.
    (3) At each level of the quantum computation, the programmer can specify what happens to each qubit
        and which qubits are controlling. The qubits could be acted on by standard quantum gates or by a
        classical Boolean function f represented by its unitary operator Uf .
You may create your own “quantum programming language”. Here is an illustrative example program.
                          -----------------------------------------------
                          |n = 4                                        |
                          |Level 1: {q2, not, q1} | {q1, H, q2 q3}      |
                          |Level 2: {q1, H, null} | {q2, q3, q4, f, q1} |
                          -----------------------------------------------
The number of levels is implicit, ℓ = 2. Let’s parse this program. Each 3-tuple has the format:
                     {bit or bits being operated on, operator, controlling bits}
In level 1, not is applied to q2 controlled by q1, which means not is applied to q2 if q1 = 1 otherwise nothing
is done to q1. And, H is applied to q1, controlled by q2, q3. This means if H is applied to q1 if q2 = q3 = |1i
and otherwise nothing is done to q1.
In level 2, H is applied to q1 and the function f is applied to (q2, q3, q4), controlled by q1. This means f is
a function on 2 bits and Uf is applied on |q2> ⊗ |q3> ⊗ |q4>. The function f must also be defined somewhere,
for example before the program starts, or in a separate file of function definitions which can be loaded into
(say) python as a library. Note, the program can also be read by python and parsed.
This program (say in python) that interprets the quantum-program and then computes the operator for the circuit 
and applies the operator on a pure state, for example the state |0, 1, 1, 0> to produce an output state ψ. The 
user can then input a set of bit indices for example {2, 4} and the program should report P[q2 = 1, q4 = 1].